"""Add updated_at column to users table

Revision ID: c938f9762f5f
Revises: 
Create Date: 2024-10-13 07:30:56.526681

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c938f9762f5f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_weather_data_id', table_name='weather_data')
    op.drop_index('ix_weather_data_location', table_name='weather_data')
    op.drop_table('weather_data')
    op.drop_index('ix_market_prices_crop', table_name='market_prices')
    op.drop_index('ix_market_prices_id', table_name='market_prices')
    op.drop_table('market_prices')
    op.add_column('bids', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('bids', sa.Column('produce_listing_id', sa.Integer(), nullable=True))
    op.add_column('bids', sa.Column('bid_amount', sa.Float(), nullable=True))
    op.create_foreign_key(None, 'bids', 'produce_listings', ['produce_listing_id'], ['id'])
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('farm_size', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('location', sa.String(), nullable=True))
    op.add_column('users', sa.Column('company_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('business_type', sa.String(), nullable=True))
    op.add_column('users', sa.Column('department', sa.String(), nullable=True))
    op.add_column('users', sa.Column('access_level', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'access_level')
    op.drop_column('users', 'department')
    op.drop_column('users', 'business_type')
    op.drop_column('users', 'company_name')
    op.drop_column('users', 'location')
    op.drop_column('users', 'farm_size')
    op.drop_column('users', 'updated_at')
    op.drop_constraint(None, 'bids', type_='foreignkey')
    op.drop_column('bids', 'bid_amount')
    op.drop_column('bids', 'produce_listing_id')
    op.drop_column('bids', 'updated_at')
    op.create_table('market_prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('crop', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('market', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recorded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='market_prices_pkey')
    )
    op.create_index('ix_market_prices_id', 'market_prices', ['id'], unique=False)
    op.create_index('ix_market_prices_crop', 'market_prices', ['crop'], unique=False)
    op.create_table('weather_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('precipitation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wind_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('recorded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='weather_data_pkey')
    )
    op.create_index('ix_weather_data_location', 'weather_data', ['location'], unique=False)
    op.create_index('ix_weather_data_id', 'weather_data', ['id'], unique=False)
    # ### end Alembic commands ###
